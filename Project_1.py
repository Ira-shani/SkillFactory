# Задача проекта: выполнить задания по исследованию таблицы

# Количество набранных в викторине баллов: 19

# Ответы на вопросы саморефлексии:

# Какой частью своей работы вы остались особенно довольны? - понимаю, как решать простые задачи с помощью Pandas

# Что не получилось сделать так, как хотелось? Над чем ещё стоит поработать? - криво выводятся данные по строкам, не понимаю (в данном проекте), как работать с графами актёров, месяцев, как считать количество символов

# Что интересного и полезного вы узнали в этом модуле? - как работать с таблицами при помощи Pandas

# Что является вашим главным результатом при прохождении этого проекта? - освоение базовых функций Pandas

# Планируете ли вы менять стратегию изучения последующих модулей? - не знаю

import pandas

movie = pandas.read_csv('C:/Users/Irina/SkillFactory/movie_bd_v5.csv')
# Вопрос 1. У какого фильма из списка самый большой бюджет?
s1 = movie.budget.max() # максимальный бюджет 38000000000
h1 = movie.budget
p1 = h1.loc[h1>300000000] # это фильм 723
r1 = movie.head(724) # tt1298650
print(r1)

# Вопрос 2. Какой из фильмов самый длительный (в минутах)?
s2 = movie.runtime.max() # максимальная длина 214
h2 = movie.runtime
p2 = h2.loc[h2>210] # это фильм 1157
r2 = movie.head(1158) # tt0279111
print(r2)

# Вопрос 3. Какой из фильмов самый короткий (в минутах)?
s3 = movie.runtime.min() # минимальная длина 63
h3 = movie.runtime
p3 = h3.loc[h3<64] # это фильм 768
r3 = movie.head(769) # tt1449283
print(r3)

# Вопрос 4. Какова средняя длительность фильмов?
s4 = movie.runtime.mean()
print(s4)

# Вопрос 5. Каково медианное значение длительности фильмов?
s5 = movie.runtime.median()
print(s5)

# Вопрос 6. Какой фильм самый прибыльный?
s6 = movie.revenue - movie.budget
p6 = s6.loc[s6 > 2000000000] # подбор, номер 239
r6 = movie.head(240) # tt0499549
print(r6)

# Вопрос 7. Какой фильм самый убыточный?
s7 = movie.revenue - movie.budget
p7 = s7.loc[s7 < -160000000] # подбор, номер 1245
r7 = movie.head(1246) # tt1210819
print(r7)

# Вопрос 8. У скольких фильмов из датасета объем сборов оказался выше бюджета?
s8 = movie.revenue - movie.budget
p8 = s8.loc[s8>0] # длина списка 1478
print(p8)

# Вопрос 9. Какой фильм оказался самым кассовым в 2008 году?
s9 = movie[movie['release_year'] == 2008]
p9 = s9.revenue - s9.budget
h9 = p9.loc[p9 > 800000000] # это фильм 599
g9 = movie.head(600) # tt0468569
print(g9)

# Вопрос 11. Какого жанра фильмов больше всего?
s11 = movie.genres.value_counts() # больше всего Comedy, но в тесте не так
print(s11)

# Вопрос 12. Какого жанра среди прибыльных фильмов больше всего?
s12 = movie[(movie['revenue'] - movie['budget']) > 0]
p12 = s12.genres.value_counts() # больше всего Comedy, но в тесте не так
print(p12)

# Вопрос 13. У какого режиссёра самые большие суммарные кассовые сборы?
s13 = movie.groupby(['director'])['revenue'].sum()
p13 = s13.max() # самый большой сбор 6490593685
h13 = s13.loc[s13 > 6000000000] # Peter Jackson
print(h13)

# Вопрос 14. Какой режиссер снял больше всего фильмов в стиле Action?

s14 = movie[movie['genres'] == 'Action']
p14 = s14.groupby(['director'])['genres'].sum() # Rob Cohen, но в тесте не так
print(p14)

# Вопрос 18. Самый убыточный фильм от Paramount Pictures?
s18 = movie[movie['production_companies'] == 'Paramount Pictures']
p18 = s18[(s18['revenue'] - s18['budget']) < -20000000] # tt0249478, но в тесте не так
print(p18)

# Вопрос 19. Какой год стал самым успешным по суммарным кассовым сборам?
s19 = movie.groupby(['release_year'])['revenue'].sum() # 2015
print(s19)

#  Какой самый прибыльный год для студии Warner Bros?
s20 = movie[movie['production_companies'] == 'Warner Bros'] # пишет, что пусто
print(s20) # дальше должно быть как-то так
# p20 = s20.groupby(['release_year'])['revenue'].sum()
# print(p20)

